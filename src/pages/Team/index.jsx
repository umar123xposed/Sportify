import React, { useEffect, useState } from "react";
import "./index.css"
import { Button, Col, Row } from "reactstrap";
import PlayerCard from "../../components/elements/playerCard";
import TeamCard from "../../components/elements/teamCard";
import { useNavigate } from "react-router-dom";
import { GET_ALL_TEAMS } from "../../graphql/query/query";
import { useQuery } from "@apollo/client";




const Teams = () => {
  const navigate = useNavigate()
    const [page, setPage] = useState(1);
  const [data1, setData1] = useState(null);
   const [fullName, setFullName] = useState("");
     const [teamType, setTeamType] = useState("all");
 const [totalPages, setTotalPages] = useState(0);
 const[selectiontags, setselectiontags]= useState({
  teams:true,
  invites: false
 })

   const [debouncedFullName, setDebouncedFullName] = useState("");
    const { loading , error , data , refetch } = useQuery(GET_ALL_TEAMS, {
      variables: {
        input: {
          limit: 12,
          page_start: page - 1,
          name: debouncedFullName || null,
          my_team:teamType == "all" ? false : true
        },
      },
    });


  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedFullName(fullName);
      setPage(1); // Reset to first page on search
    }, 500);

    return () => clearTimeout(handler);
  }, [fullName]);


 useEffect(() => {

  if (data?.getAllTeams?.data) {
    console.log(data?.getAllTeams?.data, "HAMMAD");
    setData1(data?.getAllTeams?.data);
    setTotalPages(Math.ceil(data?.getAllTeams?.total / 12))
   }

 }, [data ])

 useEffect(()=>{

 if(data?.getAllTeams?.data){
   refetch({
     variables: {
       input: {
         limit: 12,
         page_start: page - 1,
         name: debouncedFullName || null,
         my_team: teamType == "all" ? false : true,
       },
     },
   });
    setTotalPages(Math.ceil(data?.getAllTeams?.total / 12));

 }

 },[page , debouncedFullName])


const selectteam=()=>{
  setselectiontags({
    teams: true,
    invites: false
  })
}
const selectinvites=()=>{
  setselectiontags({
    teams: false,
    invites: true
  })
}
  return (
    <>
      <div className="page-wrapper  pb-4">
        <div className="slider">
          <div className="CustomeConatiner">
            {/* <Row>
              <h3 className="slider_main-heading">Find Best Teams </h3>
            </Row> */}

            {/* <Row>
              <div className="d-flex justify-content-end">
                <div
                  onClick={() => navigate("/create-team-coach")}
                  style={{ padding: "10px 20px" }}
                  className="glass-btn me-3  d-flex align-items-center "
                >
                  <label
                    className="me-2"
                    style={{ color: "#fff", fontSize: "14px" }}
                  >
                    Create Team
                  </label>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="15"
                    viewBox="0 0 20 15"
                    fill="none"
                  >
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M9.99967 0.833496C8.27378 0.833496 6.87467 2.23261 6.87467 3.9585C6.87467 5.68439 8.27378 7.0835 9.99967 7.0835C11.7256 7.0835 13.1247 5.68439 13.1247 3.9585C13.1247 2.23261 11.7256 0.833496 9.99967 0.833496ZM8.12467 3.9585C8.12467 2.92296 8.96414 2.0835 9.99967 2.0835C11.0352 2.0835 11.8747 2.92296 11.8747 3.9585C11.8747 4.99403 11.0352 5.8335 9.99967 5.8335C8.96414 5.8335 8.12467 4.99403 8.12467 3.9585Z"
                      fill="white"
                    />
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M7.49967 8.3335C5.77379 8.3335 4.37467 9.73261 4.37467 11.4585C4.37467 13.1844 5.77379 14.5835 7.49967 14.5835H12.4997C14.2256 14.5835 15.6247 13.1844 15.6247 11.4585C15.6247 9.73261 14.2256 8.3335 12.4997 8.3335H7.49967ZM5.62467 11.4585C5.62467 10.423 6.46414 9.5835 7.49967 9.5835H12.4997C13.5352 9.5835 14.3747 10.423 14.3747 11.4585C14.3747 12.494 13.5352 13.3335 12.4997 13.3335H7.49967C6.46414 13.3335 5.62467 12.494 5.62467 11.4585Z"
                      fill="white"
                    />
                    <path
                      d="M6.45979 6.15737C6.32835 5.94622 6.08173 5.8335 5.83301 5.8335C4.79747 5.8335 3.95801 4.99403 3.95801 3.9585C3.95801 2.92296 4.79747 2.0835 5.83301 2.0835C6.08173 2.0835 6.32835 1.97077 6.45979 1.75962C6.4656 1.75028 6.47145 1.74097 6.47734 1.73168C6.69617 1.38625 6.5853 0.897163 6.17884 0.852415C6.06529 0.839914 5.9499 0.833496 5.83301 0.833496C4.10712 0.833496 2.70801 2.23261 2.70801 3.9585C2.70801 5.68439 4.10712 7.0835 5.83301 7.0835C5.9499 7.0835 6.06529 7.07708 6.17884 7.06458C6.5853 7.01983 6.69617 6.53074 6.47734 6.18532C6.47145 6.17603 6.46561 6.16671 6.45979 6.15737Z"
                      fill="white"
                    />
                    <path
                      d="M3.92325 12.7642C3.82865 12.6064 3.66167 12.5002 3.47766 12.5002H3.33301C2.29747 12.5002 1.45801 11.6607 1.45801 10.6252C1.45801 9.58963 2.29747 8.75016 3.33301 8.75016H3.47766C3.66167 8.75016 3.82865 8.64393 3.92325 8.48611C4.15417 8.10085 3.90358 7.50016 3.45442 7.50016H3.33301C1.60712 7.50016 0.208008 8.89927 0.208008 10.6252C0.208008 12.3511 1.60712 13.7502 3.33301 13.7502H3.45442C3.90358 13.7502 4.15417 13.1495 3.92325 12.7642Z"
                      fill="white"
                    />
                    <path
                      d="M13.522 6.18532C13.3032 6.53074 13.4141 7.01983 13.8205 7.06458C13.9341 7.07708 14.0495 7.0835 14.1663 7.0835C15.8922 7.0835 17.2913 5.68439 17.2913 3.9585C17.2913 2.23261 15.8922 0.833496 14.1663 0.833496C14.0495 0.833496 13.9341 0.839914 13.8205 0.852416C13.4141 0.897163 13.3032 1.38625 13.522 1.73168C13.5279 1.74096 13.5337 1.75028 13.5396 1.75962C13.671 1.97077 13.9176 2.0835 14.1663 2.0835C15.2019 2.0835 16.0413 2.92296 16.0413 3.9585C16.0413 4.99403 15.2019 5.8335 14.1663 5.8335C13.9176 5.8335 13.671 5.94622 13.5396 6.15737C13.5337 6.16671 13.5279 6.17603 13.522 6.18532Z"
                      fill="white"
                    />
                    <path
                      d="M16.0761 12.7642C15.8452 13.1495 16.0958 13.7502 16.5449 13.7502H16.6663C18.3922 13.7502 19.7913 12.3511 19.7913 10.6252C19.7913 8.89927 18.3922 7.50016 16.6663 7.50016H16.5449C16.0958 7.50016 15.8452 8.10085 16.0761 8.48611C16.1707 8.64393 16.3377 8.75016 16.5217 8.75016H16.6663C17.7019 8.75016 18.5413 9.58963 18.5413 10.6252C18.5413 11.6607 17.7019 12.5002 16.6663 12.5002H16.5217C16.3377 12.5002 16.1707 12.6064 16.0761 12.7642Z"
                      fill="white"
                    />
                  </svg>
                </div>

                <div
                  onClick={() => setTeamType("my")}
                  className="glass-btn me-3  d-flex align-items-center "
                  style={{
                    padding: "10px 20px",
                    backgroundColor: teamType == "my" && "white",
                    color: teamType == "my" && "#000",
                  }}
                >
                  <label
                    className="me-2"
                    style={{
                      color: teamType == "my" ? "#000" : "#fff",
                      fontSize: "14px",
                    }}
                  >
                    My Team
                  </label>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="15"
                    viewBox="0 0 20 15"
                    fill="none"
                  >
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M9.99967 0.833496C8.27378 0.833496 6.87467 2.23261 6.87467 3.9585C6.87467 5.68439 8.27378 7.0835 9.99967 7.0835C11.7256 7.0835 13.1247 5.68439 13.1247 3.9585C13.1247 2.23261 11.7256 0.833496 9.99967 0.833496ZM8.12467 3.9585C8.12467 2.92296 8.96414 2.0835 9.99967 2.0835C11.0352 2.0835 11.8747 2.92296 11.8747 3.9585C11.8747 4.99403 11.0352 5.8335 9.99967 5.8335C8.96414 5.8335 8.12467 4.99403 8.12467 3.9585Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M7.49967 8.3335C5.77379 8.3335 4.37467 9.73261 4.37467 11.4585C4.37467 13.1844 5.77379 14.5835 7.49967 14.5835H12.4997C14.2256 14.5835 15.6247 13.1844 15.6247 11.4585C15.6247 9.73261 14.2256 8.3335 12.4997 8.3335H7.49967ZM5.62467 11.4585C5.62467 10.423 6.46414 9.5835 7.49967 9.5835H12.4997C13.5352 9.5835 14.3747 10.423 14.3747 11.4585C14.3747 12.494 13.5352 13.3335 12.4997 13.3335H7.49967C6.46414 13.3335 5.62467 12.494 5.62467 11.4585Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                    <path
                      d="M6.45979 6.15737C6.32835 5.94622 6.08173 5.8335 5.83301 5.8335C4.79747 5.8335 3.95801 4.99403 3.95801 3.9585C3.95801 2.92296 4.79747 2.0835 5.83301 2.0835C6.08173 2.0835 6.32835 1.97077 6.45979 1.75962C6.4656 1.75028 6.47145 1.74097 6.47734 1.73168C6.69617 1.38625 6.5853 0.897163 6.17884 0.852415C6.06529 0.839914 5.9499 0.833496 5.83301 0.833496C4.10712 0.833496 2.70801 2.23261 2.70801 3.9585C2.70801 5.68439 4.10712 7.0835 5.83301 7.0835C5.9499 7.0835 6.06529 7.07708 6.17884 7.06458C6.5853 7.01983 6.69617 6.53074 6.47734 6.18532C6.47145 6.17603 6.46561 6.16671 6.45979 6.15737Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                    <path
                      d="M3.92325 12.7642C3.82865 12.6064 3.66167 12.5002 3.47766 12.5002H3.33301C2.29747 12.5002 1.45801 11.6607 1.45801 10.6252C1.45801 9.58963 2.29747 8.75016 3.33301 8.75016H3.47766C3.66167 8.75016 3.82865 8.64393 3.92325 8.48611C4.15417 8.10085 3.90358 7.50016 3.45442 7.50016H3.33301C1.60712 7.50016 0.208008 8.89927 0.208008 10.6252C0.208008 12.3511 1.60712 13.7502 3.33301 13.7502H3.45442C3.90358 13.7502 4.15417 13.1495 3.92325 12.7642Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                    <path
                      d="M13.522 6.18532C13.3032 6.53074 13.4141 7.01983 13.8205 7.06458C13.9341 7.07708 14.0495 7.0835 14.1663 7.0835C15.8922 7.0835 17.2913 5.68439 17.2913 3.9585C17.2913 2.23261 15.8922 0.833496 14.1663 0.833496C14.0495 0.833496 13.9341 0.839914 13.8205 0.852416C13.4141 0.897163 13.3032 1.38625 13.522 1.73168C13.5279 1.74096 13.5337 1.75028 13.5396 1.75962C13.671 1.97077 13.9176 2.0835 14.1663 2.0835C15.2019 2.0835 16.0413 2.92296 16.0413 3.9585C16.0413 4.99403 15.2019 5.8335 14.1663 5.8335C13.9176 5.8335 13.671 5.94622 13.5396 6.15737C13.5337 6.16671 13.5279 6.17603 13.522 6.18532Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                    <path
                      d="M16.0761 12.7642C15.8452 13.1495 16.0958 13.7502 16.5449 13.7502H16.6663C18.3922 13.7502 19.7913 12.3511 19.7913 10.6252C19.7913 8.89927 18.3922 7.50016 16.6663 7.50016H16.5449C16.0958 7.50016 15.8452 8.10085 16.0761 8.48611C16.1707 8.64393 16.3377 8.75016 16.5217 8.75016H16.6663C17.7019 8.75016 18.5413 9.58963 18.5413 10.6252C18.5413 11.6607 17.7019 12.5002 16.6663 12.5002H16.5217C16.3377 12.5002 16.1707 12.6064 16.0761 12.7642Z"
                      fill={teamType == "my" ? "#000" : "#fff"}
                    />
                  </svg>
                </div>
                <div
                  onClick={() => setTeamType("all")}
                  style={{ padding: "10px 20px", backgroundColor:teamType == "all" &&  "#fff" }}
                  className="glass-btn me-3  d-flex align-items-center "
                >
                  <label
                    className="me-2"
                    style={{ color:teamType == "all" ? "#000" : "#fff", fontSize: "14px" }}
                  >
                    All Teams
                  </label>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="20"
                    height="15"
                    viewBox="0 0 20 15"
                    fill="none"
                  >
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M9.99967 0.833496C8.27378 0.833496 6.87467 2.23261 6.87467 3.9585C6.87467 5.68439 8.27378 7.0835 9.99967 7.0835C11.7256 7.0835 13.1247 5.68439 13.1247 3.9585C13.1247 2.23261 11.7256 0.833496 9.99967 0.833496ZM8.12467 3.9585C8.12467 2.92296 8.96414 2.0835 9.99967 2.0835C11.0352 2.0835 11.8747 2.92296 11.8747 3.9585C11.8747 4.99403 11.0352 5.8335 9.99967 5.8335C8.96414 5.8335 8.12467 4.99403 8.12467 3.9585Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M7.49967 8.3335C5.77379 8.3335 4.37467 9.73261 4.37467 11.4585C4.37467 13.1844 5.77379 14.5835 7.49967 14.5835H12.4997C14.2256 14.5835 15.6247 13.1844 15.6247 11.4585C15.6247 9.73261 14.2256 8.3335 12.4997 8.3335H7.49967ZM5.62467 11.4585C5.62467 10.423 6.46414 9.5835 7.49967 9.5835H12.4997C13.5352 9.5835 14.3747 10.423 14.3747 11.4585C14.3747 12.494 13.5352 13.3335 12.4997 13.3335H7.49967C6.46414 13.3335 5.62467 12.494 5.62467 11.4585Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                    <path
                      d="M6.45979 6.15737C6.32835 5.94622 6.08173 5.8335 5.83301 5.8335C4.79747 5.8335 3.95801 4.99403 3.95801 3.9585C3.95801 2.92296 4.79747 2.0835 5.83301 2.0835C6.08173 2.0835 6.32835 1.97077 6.45979 1.75962C6.4656 1.75028 6.47145 1.74097 6.47734 1.73168C6.69617 1.38625 6.5853 0.897163 6.17884 0.852415C6.06529 0.839914 5.9499 0.833496 5.83301 0.833496C4.10712 0.833496 2.70801 2.23261 2.70801 3.9585C2.70801 5.68439 4.10712 7.0835 5.83301 7.0835C5.9499 7.0835 6.06529 7.07708 6.17884 7.06458C6.5853 7.01983 6.69617 6.53074 6.47734 6.18532C6.47145 6.17603 6.46561 6.16671 6.45979 6.15737Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                    <path
                      d="M3.92325 12.7642C3.82865 12.6064 3.66167 12.5002 3.47766 12.5002H3.33301C2.29747 12.5002 1.45801 11.6607 1.45801 10.6252C1.45801 9.58963 2.29747 8.75016 3.33301 8.75016H3.47766C3.66167 8.75016 3.82865 8.64393 3.92325 8.48611C4.15417 8.10085 3.90358 7.50016 3.45442 7.50016H3.33301C1.60712 7.50016 0.208008 8.89927 0.208008 10.6252C0.208008 12.3511 1.60712 13.7502 3.33301 13.7502H3.45442C3.90358 13.7502 4.15417 13.1495 3.92325 12.7642Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                    <path
                      d="M13.522 6.18532C13.3032 6.53074 13.4141 7.01983 13.8205 7.06458C13.9341 7.07708 14.0495 7.0835 14.1663 7.0835C15.8922 7.0835 17.2913 5.68439 17.2913 3.9585C17.2913 2.23261 15.8922 0.833496 14.1663 0.833496C14.0495 0.833496 13.9341 0.839914 13.8205 0.852416C13.4141 0.897163 13.3032 1.38625 13.522 1.73168C13.5279 1.74096 13.5337 1.75028 13.5396 1.75962C13.671 1.97077 13.9176 2.0835 14.1663 2.0835C15.2019 2.0835 16.0413 2.92296 16.0413 3.9585C16.0413 4.99403 15.2019 5.8335 14.1663 5.8335C13.9176 5.8335 13.671 5.94622 13.5396 6.15737C13.5337 6.16671 13.5279 6.17603 13.522 6.18532Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                    <path
                      d="M16.0761 12.7642C15.8452 13.1495 16.0958 13.7502 16.5449 13.7502H16.6663C18.3922 13.7502 19.7913 12.3511 19.7913 10.6252C19.7913 8.89927 18.3922 7.50016 16.6663 7.50016H16.5449C16.0958 7.50016 15.8452 8.10085 16.0761 8.48611C16.1707 8.64393 16.3377 8.75016 16.5217 8.75016H16.6663C17.7019 8.75016 18.5413 9.58963 18.5413 10.6252C18.5413 11.6607 17.7019 12.5002 16.6663 12.5002H16.5217C16.3377 12.5002 16.1707 12.6064 16.0761 12.7642Z"
                      fill={teamType == "all" ? "#000" : "#fff"}
                    />
                  </svg>
                </div>
              </div>
            </Row> */}

            <div className="glass-card mt-4">
              <Row>
                <Col md={12}>
                  <div className="Search">
                    <h4> Search Team </h4>
                    <input
                      style={{ color: "#fff" }}
                      value={fullName}
                      onChange={(e) => {
                        setFullName(e.target.value);
                        setPage(1); // Reset to first page on search
                      }}
                      type="text"
                      placeholder="Search by Name "
                    />
                  </div>
                </Col>
              </Row>
            </div>

<Row className="w-100">
            <Col md={12}>
          <div className="selecttags">
            <div className="tagsss" onClick={selectteam}>My teams</div>
            <div className="tagsss" onClick={selectinvites}>My Invites</div>
            
          </div>
          </Col>
          </Row>

            <Row className="mt-3">
              {data1?.map((item) => {
                return (
                  <>
                    <Col md={3} className="my-2">
                      <div style={{ width: "100%" }} className={` w-100`}>
                        <TeamCard
                          title={item?.name}
                          
                          picture={`${import.meta.env.VITE_BASE_URL_IMAGE}${
                            item?.logo
                          }`}
                          data={item}
                        />
                        {/* <InviteCard
                         handleSend={handleSendInvite}
                         title={item?.nick_name}
                         id={item?.player_id}
                         sendid={item?.user_id}
                       /> */}

                      </div>
                    </Col>
                  </>
                );
              })}

              {!data1?.length && (
                <h3 className="text-center my-5" style={{ color: "#fff" }}>
                  No Record Found
                </h3>
              )}
              {/* Pagination Controls */}
              <div className="d-flex justify-content-center align-items-center mt-3">
                <Button disabled={page === 1} onClick={() => setPage(page - 1)}>
                  Previous
                </Button>
                <span
                  style={{ color: "#fff", fontSize: "14px" }}
                  className="mx-3 d-flex align"
                >
                  Page {!data1?.length ? "0" : page} of {totalPages}
                </span>
                <Button
                  disabled={page === totalPages || !data1?.length}
                  onClick={() => setPage(page + 1)}
                >
                  Next
                </Button>
              </div>
            </Row>
          </div>
        </div>
      </div>
    </>
  );
};

export default Teams;

