{
  "version": 3,
  "sources": ["../../node_modules/@babel/runtime/helpers/extends.js", "../../node_modules/extract-files/public/ReactNativeFile.js", "../../node_modules/extract-files/public/isExtractableFile.js", "../../node_modules/extract-files/public/extractFiles.js", "../../node_modules/apollo-upload-client/public/formDataAppendFile.js", "../../node_modules/apollo-upload-client/public/isExtractableFile.js", "../../node_modules/apollo-upload-client/public/createUploadLink.js", "../../node_modules/apollo-upload-client/public/ReactNativeFile.js", "../../node_modules/apollo-upload-client/public/index.mjs"],
  "sourcesContent": ["function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "'use strict';\n\nmodule.exports = function ReactNativeFile(_ref) {\n  var uri = _ref.uri,\n    name = _ref.name,\n    type = _ref.type;\n  this.uri = uri;\n  this.name = name;\n  this.type = type;\n};\n", "'use strict';\n\nvar ReactNativeFile = require('./ReactNativeFile');\n\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n", "'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n\n  var clone;\n  var files = new Map();\n\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, function (file, i) {\n        addFile(['' + prefix + i], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map(function (child, i) {\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return {\n    clone: clone,\n    files: files,\n  };\n};\n", "'use strict';\n\nmodule.exports = function formDataAppendFile(formData, fieldName, file) {\n  formData.append(fieldName, file, file.name);\n};\n", "'use strict';\n\nmodule.exports = require('extract-files/public/isExtractableFile');\n", "'use strict';\n\nvar _extends = require('@babel/runtime/helpers/extends');\n\nvar _require = require('@apollo/client/core'),\n  ApolloLink = _require.ApolloLink,\n  Observable = _require.Observable;\n\nvar _require2 = require('@apollo/client/link/http'),\n  createSignalIfSupported = _require2.createSignalIfSupported,\n  fallbackHttpConfig = _require2.fallbackHttpConfig,\n  parseAndCheckHttpResponse = _require2.parseAndCheckHttpResponse,\n  rewriteURIForGET = _require2.rewriteURIForGET,\n  selectHttpOptionsAndBody = _require2.selectHttpOptionsAndBody,\n  selectURI = _require2.selectURI,\n  serializeFetchParameter = _require2.serializeFetchParameter;\n\nvar extractFiles = require('extract-files/public/extractFiles');\n\nvar formDataAppendFile = require('./formDataAppendFile');\n\nvar isExtractableFile = require('./isExtractableFile');\n\nmodule.exports = function createUploadLink(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$uri = _ref.uri,\n    fetchUri = _ref$uri === void 0 ? '/graphql' : _ref$uri,\n    useGETForQueries = _ref.useGETForQueries,\n    _ref$isExtractableFil = _ref.isExtractableFile,\n    customIsExtractableFile =\n      _ref$isExtractableFil === void 0\n        ? isExtractableFile\n        : _ref$isExtractableFil,\n    CustomFormData = _ref.FormData,\n    _ref$formDataAppendFi = _ref.formDataAppendFile,\n    customFormDataAppendFile =\n      _ref$formDataAppendFi === void 0\n        ? formDataAppendFile\n        : _ref$formDataAppendFi,\n    customFetch = _ref.fetch,\n    fetchOptions = _ref.fetchOptions,\n    credentials = _ref.credentials,\n    headers = _ref.headers,\n    includeExtensions = _ref.includeExtensions;\n\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions,\n    },\n    options: fetchOptions,\n    credentials: credentials,\n    headers: headers,\n  };\n  return new ApolloLink(function (operation) {\n    var context = operation.getContext();\n    var _context$clientAwaren = context.clientAwareness;\n    _context$clientAwaren =\n      _context$clientAwaren === void 0 ? {} : _context$clientAwaren;\n    var name = _context$clientAwaren.name,\n      version = _context$clientAwaren.version,\n      headers = context.headers;\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: _extends(\n        {},\n        name && {\n          'apollographql-client-name': name,\n        },\n        version && {\n          'apollographql-client-version': version,\n        },\n        headers\n      ),\n    };\n\n    var _selectHttpOptionsAnd = selectHttpOptionsAndBody(\n        operation,\n        fallbackHttpConfig,\n        linkConfig,\n        contextConfig\n      ),\n      options = _selectHttpOptionsAnd.options,\n      body = _selectHttpOptionsAnd.body;\n\n    var _extractFiles = extractFiles(body, '', customIsExtractableFile),\n      clone = _extractFiles.clone,\n      files = _extractFiles.files;\n\n    var uri = selectURI(operation, fetchUri);\n\n    if (files.size) {\n      delete options.headers['content-type'];\n      var RuntimeFormData = CustomFormData || FormData;\n      var form = new RuntimeFormData();\n      form.append('operations', serializeFetchParameter(clone, 'Payload'));\n      var map = {};\n      var i = 0;\n      files.forEach(function (paths) {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n      i = 0;\n      files.forEach(function (paths, file) {\n        customFormDataAppendFile(form, ++i, file);\n      });\n      options.body = form;\n    } else {\n      if (\n        useGETForQueries &&\n        !operation.query.definitions.some(function (definition) {\n          return (\n            definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation'\n          );\n        })\n      )\n        options.method = 'GET';\n\n      if (options.method === 'GET') {\n        var _rewriteURIForGET = rewriteURIForGET(uri, body),\n          newURI = _rewriteURIForGET.newURI,\n          parseError = _rewriteURIForGET.parseError;\n\n        if (parseError)\n          return new Observable(function (observer) {\n            observer.error(parseError);\n          });\n        uri = newURI;\n      } else options.body = serializeFetchParameter(clone, 'Payload');\n    }\n\n    var _createSignalIfSuppor = createSignalIfSupported(),\n      controller = _createSignalIfSuppor.controller;\n\n    if (controller) {\n      if (options.signal)\n        options.signal.addEventListener('abort', function () {\n          controller.abort();\n        });\n      options.signal = controller.signal;\n    }\n\n    var runtimeFetch = customFetch || fetch;\n    return new Observable(function (observer) {\n      var cleaningUp;\n      runtimeFetch(uri, options)\n        .then(function (response) {\n          operation.setContext({\n            response: response,\n          });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(function (result) {\n          observer.next(result);\n          observer.complete();\n        })\n        .catch(function (error) {\n          if (!cleaningUp) {\n            if (error.result && error.result.errors && error.result.data)\n              observer.next(error.result);\n            observer.error(error);\n          }\n        });\n      return function () {\n        cleaningUp = true;\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n", "'use strict';\n\nmodule.exports = require('extract-files/public/ReactNativeFile');\n", "export { default as createUploadLink } from './createUploadLink.js';\nexport { default as formDataAppendFile } from './formDataAppendFile.js';\nexport { default as isExtractableFile } from './isExtractableFile.js';\nexport { default as ReactNativeFile } from './ReactNativeFile.js';\n"],
  "mappings": "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",
  "names": ["i", "result", "require_isExtractableFile", "headers", "require_ReactNativeFile"]
}
